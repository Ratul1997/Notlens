{"ast":null,"code":"var _jsxFileName = \"/home/rat/Desktop/Diligite/Games/Design/notlens/src/Routes/PublicRoute.jsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom'; // import { isLogin } from '../utils';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isLogin = true;\n\nconst PublicRoute = ({\n  component: Component,\n  restricted,\n  ...rest\n}) => {\n  return (\n    /*#__PURE__*/\n    // restricted = false meaning public route\n    // restricted = true meaning restricted route\n    _jsxDEV(Route, { ...rest,\n      render: props => isLogin && restricted ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_c = PublicRoute;\nexport default PublicRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicRoute\");","map":{"version":3,"sources":["/home/rat/Desktop/Diligite/Games/Design/notlens/src/Routes/PublicRoute.jsx"],"names":["React","Route","Redirect","isLogin","PublicRoute","component","Component","restricted","rest","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC,C,CACA;;;AACA,MAAMC,OAAO,GAAG,IAAhB;;AACA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuBC,EAAAA,UAAvB;AAAmC,KAAGC;AAAtC,CAAD,KAAiD;AACjE;AAAA;AACI;AACA;AACA,YAAC,KAAD,OAAWA,IAAX;AAAiB,MAAA,MAAM,EAAEC,KAAK,IAC1BN,OAAO,IAAII,UAAX,gBACI,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,gBAEE,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA;AAHN;AAAA;AAAA;AAAA;AAAA;AAHJ;AASH,CAVD;;KAAML,W;AAYN,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n// import { isLogin } from '../utils';\nconst isLogin = true\nconst PublicRoute = ({component: Component, restricted, ...rest}) => {\n    return (\n        // restricted = false meaning public route\n        // restricted = true meaning restricted route\n        <Route {...rest} render={props => (\n            isLogin && restricted ?\n                <Redirect to=\"/dashboard\" />\n            : <Component {...props} />\n        )} />\n    );\n};\n\nexport default PublicRoute;"]},"metadata":{},"sourceType":"module"}