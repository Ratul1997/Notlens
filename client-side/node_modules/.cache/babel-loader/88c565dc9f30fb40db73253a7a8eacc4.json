{"ast":null,"code":"var _jsxFileName = \"/home/rat/Desktop/Diligite/Games/Design/notlens/src/Routes/PrivateRoute.jsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom'; // import { isLogin } from '../utils';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isLogin = true;\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return (\n    /*#__PURE__*/\n    // Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    _jsxDEV(Route, { ...rest,\n      render: props => isLogin ? /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/signin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/rat/Desktop/Diligite/Games/Design/notlens/src/Routes/PrivateRoute.jsx"],"names":["React","Route","Redirect","isLogin","PrivateRoute","component","Component","rest","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC,C,CACA;;;AAEA,MAAMC,OAAO,GAAG,IAAhB;;AACA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAD,KAAqC;AACtD;AAAA;AAEI;AACA;AACA,YAAC,KAAD,OAAWA,IAAX;AAAiB,MAAA,MAAM,EAAEC,KAAK,IAC1BL,OAAO,gBACH,QAAC,SAAD,OAAeK;AAAf;AAAA;AAAA;AAAA;AAAA,cADG,gBAEL,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAHN;AAAA;AAAA;AAAA;AAAA;AAJJ;AAUH,CAXD;;KAAMJ,Y;AAaN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n// import { isLogin } from '../utils';\n\nconst isLogin = true\nconst PrivateRoute = ({component: Component, ...rest}) => {\n    return (\n\n        // Show the component only when the user is logged in\n        // Otherwise, redirect the user to /signin page\n        <Route {...rest} render={props => (\n            isLogin ?\n                <Component {...props} />\n            : <Redirect to=\"/signin\" />\n        )} />\n    );\n};\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}